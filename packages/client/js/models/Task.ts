/* tslint:disable */
/* eslint-disable */
/**
 * Agent Protocol
 * Specification of the API protocol for communication with an agent.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { Artifact } from './Artifact'
import {
  ArtifactFromJSON,
  ArtifactFromJSONTyped,
  ArtifactToJSON,
} from './Artifact'

/**
 *
 * @export
 * @interface Task
 */
export interface Task {
  /**
   * Input prompt for the task.
   * @type {string}
   * @memberof Task
   */
  input?: string | null
  /**
   * Input parameters for the task. Any value is allowed.
   * @type {object}
   * @memberof Task
   */
  additionalInput?: object
  /**
   * The ID of the task.
   * @type {string}
   * @memberof Task
   */
  taskId: string
  /**
   * A list of artifacts that the task has produced.
   * @type {Array<Artifact>}
   * @memberof Task
   */
  artifacts: Array<Artifact>
}

/**
 * Check if a given object implements the Task interface.
 */
export function instanceOfTask(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'taskId' in value
  isInstance = isInstance && 'artifacts' in value

  return isInstance
}

export function TaskFromJSON(json: any): Task {
  return TaskFromJSONTyped(json, false)
}

export function TaskFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Task {
  if (json === undefined || json === null) {
    return json
  }
  return {
    input: !exists(json, 'input') ? undefined : json['input'],
    additionalInput: !exists(json, 'additional_input')
      ? undefined
      : json['additional_input'],
    taskId: json['task_id'],
    artifacts: (json['artifacts'] as Array<any>).map(ArtifactFromJSON),
  }
}

export function TaskToJSON(value?: Task | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    input: value.input,
    additional_input: value.additionalInput,
    task_id: value.taskId,
    artifacts: (value.artifacts as Array<any>).map(ArtifactToJSON),
  }
}
