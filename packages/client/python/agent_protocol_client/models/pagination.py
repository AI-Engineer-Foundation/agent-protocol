# coding: utf-8

"""
    Agent Protocol

    Specification of the API protocol for communication with an agent.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from agent_protocol_client.pydantic_v1 import BaseModel, Field, StrictInt


class Pagination(BaseModel):
    """
    Pagination
    """

    total_items: StrictInt = Field(..., description="Total number of items.")
    total_pages: StrictInt = Field(..., description="Total number of pages.")
    current_page: StrictInt = Field(..., description="Current_page page number.")
    page_size: StrictInt = Field(..., description="Number of items per page.")
    __properties = ["total_items", "total_pages", "current_page", "page_size"]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Pagination:
        """Create an instance of Pagination from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Pagination:
        """Create an instance of Pagination from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return Pagination.parse_obj(obj)

        _obj = Pagination.parse_obj(
            {
                "total_items": obj.get("total_items"),
                "total_pages": obj.get("total_pages"),
                "current_page": obj.get("current_page"),
                "page_size": obj.get("page_size"),
            }
        )
        return _obj
