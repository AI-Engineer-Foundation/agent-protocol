openapi: 3.0.1
info:
  title: Agent Protocol
  description: Specification of the API protocol for communication with an agent.
  version: v0.3
paths:
  /agent/tasks:
    post:
      operationId: createAgentTask
      summary: Creates a task for the agent.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequestBody'
      responses:
        '200':
          description: A new agent task was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Internal Server Error
      tags:
        - agent
    get:
      operationId: listAgentTasksIDs
      summary: List all tasks that have been created for the agent.
      responses:
        '200':
          description: Returned list of agent's task IDs.
          content:
            application/json:
              schema:
                description: A list of task IDs
                type: array
                items:
                  type: string
                default: []
        default:
          description: Internal Server Error
      tags:
        - agent
  '/agent/tasks/{task_id}':
    get:
      operationId: getAgentTask
      summary: Get details about a specified agent task.
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returned details about an agent task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found.
        default:
          description: Internal Server Error
      tags:
        - agent
  '/agent/tasks/{task_id}/steps':
    get:
      operationId: listAgentTaskSteps
      summary: List all steps for the specified task.
      parameters:
        - name: task_id
          in: path
          description: ID of the task.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returned list of agent's step IDs for the specified task.
          content:
            application/json:
              schema:
                description: A list of step IDs for the task
                type: array
                items:
                  type: string
                default: []
        '404':
          description: Task not found.
        default:
          description: Internal Server Error
      tags:
        - agent
    post:
      operationId: executeAgentTaskStep
      summary: Execute a step in the specified agent task.
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepRequestBody'
      responses:
        '200':
          description: Executed step for the agent task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
        '404':
          description: Task not found.
        default:
          description: Internal Server Error
      tags:
        - agent
  '/agent/tasks/{task_id}/steps/{step_id}':
    get:
      operationId: getAgentTaskStep
      summary: Get details about a specified task step.
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
        - name: step_id
          in: path
          description: ID of the step
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returned details about an agent task step.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
        '404':
          description: Task or step not found.
        default:
          description: Internal Server Error
      tags:
        - agent
  '/agent/tasks/{task_id}/artifacts':
    get:
      operationId: listAgentTaskArtifacts
      summary: List all artifacts that have been created for the given task.
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returned the content of the artifact.
          content:
            application/json:
              schema:
                description: A list of artifacts for the task
                type: array
                items:
                  $ref: '#/components/schemas/Artifact'
                default: []
        '404':
          description: Task not found.
        default:
          description: Internal Server Error
      tags:
        - agent
    post:
      operationId: uploadAgentTaskArtifacts
      summary: Upload an artifact for the specified task.
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArtifactUpload'
      responses:
        '200':
          description: Returned the content of the artifact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
        '404':
          description: Task not found.
        default:
          description: Internal Server Error
      tags:
        - agent
  '/agent/tasks/{task_id}/artifacts/{artifact_id}':
    get:
      operationId: downloadAgentTaskArtifact
      summary: Download a specified artifact.
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
        - name: artifact_id
          in: path
          description: ID of the artifact
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returned the content of the artifact.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Task or artifact not found.
        default:
          description: Internal Server Error
      tags:
        - agent
components:
  schemas:
    TaskInput:
      description: Input parameters for the task. Any value is allowed.
      example: |-
        {
        "debug": false,
        "mode": "benchmarks"
        }
    Artifact:
      description: Artifact that the task has produced.
      type: object
      properties:
        artifact_id:
          description: ID of the artifact.
          type: string
          example: b225e278-8b4c-4f99-a696-8facf19f0e56
        file_name:
          description: Filename of the artifact.
          type: string
          example: main.py
        relative_path:
          description: Relative path of the artifact in the agent's workspace.
          type: string
          example: python/code/
      required:
        - artifact_id
        - file_name
    ArtifactUpload:
      description: Artifact to upload to the agent.
      type: object
      properties:
        file:
          description: File to upload.
          type: string
          format: binary
        relative_path:
          description: Relative path of the artifact in the agent's workspace.
          type: string
          example: python/code
      required:
        - file
    StepInput:
      description: Input parameters for the task step. Any value is allowed.
      example: |-
        {
        "file_to_refactor": "models.py"
        }
    StepOutput:
      description: Output that the task step has produced. Any value is allowed.
      example: |-
        {
        "tokens": 7894,
        "estimated_cost": "0,24$"
        }
    TaskRequestBody:
      description: Body of the task request.
      type: object
      properties:
        input:
          description: Input prompt for the task.
          type: string
          example: Write the words you receive to the file 'output.txt'.
        additional_input:
          $ref: '#/components/schemas/TaskInput'
    Task:
      allOf:
        - $ref: '#/components/schemas/TaskRequestBody'
        - type: object
          description: Definition of an agent task.
          required:
            - task_id
            - artifacts
          properties:
            task_id:
              description: The ID of the task.
              type: string
              example: 50da533e-3904-4401-8a07-c49adf88b5eb
            artifacts:
              description: A list of artifacts that the task has produced.
              type: array
              items:
                $ref: '#/components/schemas/Artifact'
              example:
                - 7a49f31c-f9c6-4346-a22c-e32bc5af4d8e
                - ab7b4091-2560-4692-a4fe-d831ea3ca7d6
              default: []
    StepRequestBody:
      description: Body of the task request.
      type: object
      properties:
        input:
          description: Input prompt for the step.
          type: string
          example: Washington
        additional_input:
          $ref: '#/components/schemas/StepInput'
    Step:
      allOf:
        - $ref: '#/components/schemas/StepRequestBody'
        - type: object
          required:
            - step_id
            - task_id
            - status
            - artifacts
          properties:
            task_id:
              description: The ID of the task this step belongs to.
              type: string
              example: 50da533e-3904-4401-8a07-c49adf88b5eb
            step_id:
              description: The ID of the task step.
              type: string
              example: 6bb1801a-fd80-45e8-899a-4dd723cc602e
            name:
              description: The name of the task step.
              type: string
              example: Write to file
            status:
              description: The status of the task step.
              type: string
              enum:
                - created
                - running
                - completed
            output:
              description: Output of the task step.
              type: string
              example: 'I am going to use the write_to_file command and write Washington to a file called output.txt <write_to_file(''output.txt'', ''Washington'')'
            additional_output:
              $ref: '#/components/schemas/StepOutput'
            artifacts:
              description: A list of artifacts that the step has produced.
              type: array
              items:
                $ref: '#/components/schemas/Artifact'
              default: []
            is_last:
              description: Whether this is the last step in the task.
              type: boolean
              default: false
