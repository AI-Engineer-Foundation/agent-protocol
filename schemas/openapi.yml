openapi: 3.0.1
servers:
    - url: "http://0.0.0.0:8000"
      description: Test server tes
info:
    title: Agent Protocol
    description: Specification of the API protocol for communication with an agent.
    version: "v0.4"

paths:
    /agent/tasks:
        post:
            summary: Creates a task for the agent.
            tags: [agent]
            operationId: createAgentTask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaskRequestBody"
            responses:
                200:
                    description: A new agent task was successfully created.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Task"
                    x-postman-variables:
                        - type: save
                          name: task_id
                          path: .task_id
                422:
                    description: Unprocessable entity
                default:
                    description: Internal Server Error
        get:
            summary: List all tasks that have been created for the agent.
            tags: [agent]
            operationId: listAgentTasksIDs
            parameters:
                - name: current_page
                  in: query
                  description: Page number
                  required: false
                  example: 2
                  schema:
                      type: integer
                      format: int32
                      default: 1
                      minimum: 1
                - name: page_size
                  in: query
                  description: Number of items per page
                  required: false
                  example: 25
                  schema:
                      type: integer
                      format: int32
                      default: 10
                      minimum: 1
            responses:
                200:
                    description: Returned list of agent's tasks.
                    headers:
                        content-length:
                            description: The length of the response body in octets (8-bit bytes)
                            schema:
                                type: integer
                        date:
                            description: The date and time at which the message was originated
                            schema:
                                type: string
                                format: date-time
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaskListResponse"
                default:
                    description: Internal Server Error

    /agent/tasks/{task_id}:
        get:
            summary: Get details about a specified agent task.
            tags: [agent]
            operationId: getAgentTask
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  required: true
                  example: "1d5a533e-3904-4401-8a07-c49adf88b981"
                  schema:
                      type: string
                  x-postman-variables:
                      - type: load
                        name: task_id
            responses:
                200:
                    description: Returned details about an agent task.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Task"
                404:
                    description: Task not found.
                default:
                    description: Internal Server Error

<<<<<<< HEAD:schemas/openapi.yml
  /agent/tasks/{task_id}/steps:
    get:
      summary: List all steps for the specified task.
      tags: [agent]
      operationId: listAgentTaskSteps
      parameters:
        - name: task_id
          in: path
          description: ID of the task.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returned list of agent's step IDs for the specified task.
          content:
            application/json:
              schema:
                type: array
                default: []
                description: A list of step IDs for the task
                items:
                  type: string
        404:
          description: Task not found.
        default:
          description: Internal Server Error
    post:
      summary: Execute a step in the specified agent task.
      tags: [agent]
      operationId: executeAgentTaskStep
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepRequestBody'
      responses:
        200:
          description: Executed step for the agent task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
        404:
          description: Task not found.
        default:
          description: Internal Server Error
=======
    /agent/tasks/{task_id}/steps:
        get:
            summary: List all steps for the specified task.
            tags: [agent]
            operationId: listAgentTaskSteps
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  required: true
                  example: "50da533e-3904-4401-8a07-c49adf88b5eb"
                  schema:
                      type: string
                  x-postman-variables:
                      - type: load
                        name: task_id
                - name: current_page
                  in: query
                  description: Page number
                  example: 2
                  required: false
                  schema:
                      type: integer
                      format: int32
                      default: 1
                      minimum: 1
                - name: page_size
                  in: query
                  description: Number of items per page
                  required: false
                  example: 25
                  schema:
                      type: integer
                      format: int32
                      default: 10
                      minimum: 1
            responses:
                200:
                    description: Returned list of agent's steps for the specified task.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaskStepsListResponse"
                404:
                    description: Task not found.
                default:
                    description: Internal Server Error
        post:
            summary: Execute a step in the specified agent task.
            tags: [agent]
            operationId: executeAgentTaskStep
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  required: true
                  example: "50da533e-3904-4401-8a07-c49adf88b5eb"
                  schema:
                      type: string
                  x-postman-variables:
                      - type: load
                        name: task_id
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StepRequestBody"
            responses:
                200:
                    description: Executed step for the agent task.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Step"
                    x-postman-variables:
                        - type: save
                          name: step_id
                          path: .step_id
                        - type: save
                          name: artifact_array
                          path: .artifacts
                404:
                    description: Task not found.
                422:
                    description: Unprocessable entity.
                default:
                    description: Internal Server Error
>>>>>>> 450b41d (Update openapi.json and openapi.yml in the root directory):openapi.yml

    /agent/tasks/{task_id}/steps/{step_id}:
        get:
            summary: Get details about a specified task step.
            tags: [agent]
            operationId: getAgentTaskStep
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  example: "50da533e-3904-4401-8a07-c49adf88b5eb"
                  required: true
                  schema:
                      type: string
                  x-postman-variables:
                      - type: load
                        name: task_id
                      - type: load
                        name: step_id
                - name: step_id
                  in: path
                  example: "28ca533e-3904-4401-8a07-c49adf8891c2"
                  description: ID of the step
                  required: true
                  schema:
                      type: string
                  x-postman-variables:
                      - type: load
                        name: step_id
            responses:
                200:
                    description: Returned details about an agent task step.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Step"
                404:
                    description: Task or step not found.
                default:
                    description: Internal Server Error

    /agent/tasks/{task_id}/artifacts:
        get:
            summary: List all artifacts that have been created for the given task.
            tags: [agent]
            operationId: listAgentTaskArtifacts
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  example: "50da533e-3904-4401-8a07-c49adf88b5eb"
                  required: true
                  schema:
                      type: string
                  x-postman-variables:
                      - type: load
                        name: task_id
                - name: current_page
                  in: query
                  description: Page number
                  example: 2
                  required: false
                  schema:
                      type: integer
                      format: int32
                      default: 1
                      minimum: 1
                - name: page_size
                  in: query
                  description: Number of items per page
                  required: false
                  example: 25
                  schema:
                      type: integer
                      format: int32
                      default: 10
                      minimum: 1
            responses:
                200:
                    description: Returned the list of artifacts for the task.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaskArtifactsListResponse"
                404:
                    description: Task not found.
                default:
                    description: Internal Server Error
        post:
            summary: Upload an artifact for the specified task.
            tags: [agent]
            operationId: uploadAgentTaskArtifacts
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  example: "50da533e-3904-4401-8a07-c49adf88b5eb"
                  required: true
                  schema:
                      type: string
                  x-postman-variables:
                      - type: load
                        name: task_id
                - name: URI
                  in: header
                  schema:
                      type: string
                  example: "file://output.txt"
                  required: true
                  description: URI of the artifact.
            requestBody:
                content:
                    application/octet-stream:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: octet-stream
                                    description: File to upload. (The example is 'Washington' in binary)
                                    example: 01010111011000010111001101101000011010010110111001100111011101000110111101101110

            responses:
                200:
                    description: Returned the content of the artifact.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Artifact"
                404:
                    description: Task not found.
                default:
                    description: Internal Server Error

    /agent/tasks/{task_id}/artifacts/{artifact_id}:
        get:
            summary: Download a specified artifact.
            tags: [agent]
            operationId: downloadAgentTaskArtifact
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  required: true
                  example: "50da533e-3904-4401-8a07-c49adf88b5eb"
                  schema:
                      type: string
                  x-postman-variables:
                      - type: load
                        name: task_id
                      - type: load
                        name: artifact_array
                        path: "[0].artifact_id"
                - name: artifact_id
                  in: path
                  example: "1e41533e-3904-4401-8a07-c49adf8893de"
                  description: ID of the artifact
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returned the content of the artifact.
                    content:
                        application/octet-stream:
                            schema:
                                type: string
                                format: binary
                404:
                    description: Task or artifact not found.
                default:
                    description: Internal Server Error

components:
    schemas:
        Pagination:
            type: object
            required:
                - total_items
                - total_pages
                - current_page
                - page_size
            properties:
                total_items:
                    type: integer
                    description: Total number of items.
                    example: 42
                total_pages:
                    type: integer
                    description: Total number of pages.
                    example: 97
                current_page:
                    type: integer
                    description: Current_page page number.
                    example: 1
                page_size:
                    type: integer
                    description: Number of items per page.
                    example: 25

        TaskListResponse:
            type: object
            properties:
                tasks:
                    type: array
                    items:
                        $ref: "#/components/schemas/Task"
                pagination:
                    $ref: "#/components/schemas/Pagination"

        TaskStepsListResponse:
            type: object
            properties:
                steps:
                    type: array
                    items:
                        $ref: "#/components/schemas/Step"
                pagination:
                    $ref: "#/components/schemas/Pagination"

        TaskArtifactsListResponse:
            type: object
            properties:
                artifacts:
                    type: array
                    items:
                        $ref: "#/components/schemas/Artifact"
                pagination:
                    $ref: "#/components/schemas/Pagination"

        TaskInput:
            description: Input parameters for the task. Any value is allowed.
            type: object
            example: "{\n\"debug\": false,\n\"mode\": \"benchmarks\"\n}"

        Artifact:
            type: object
            required:
                - "artifact_id"
                - "agent_created"
            description: An Artifact either created by or submitted to the agent.
            properties:
                artifact_id:
                    type: string
                    description: ID of the artifact.
                    example: b225e278-8b4c-4f99-a696-8facf19f0e56
                agent_created:
                    type: boolean
                    description: Whether the artifact has been created by the agent.
                    example: false
                uri:
                    type: string
                    description: URI of the artifact.
                    example: file://home/bob/workspace/bucket/main.py

        StepInput:
            description: Input parameters for the task step. Any value is allowed.
            type: object
            example: "{\n\"file_to_refactor\": \"models.py\"\n}"

        StepOutput:
            description: Output that the task step has produced. Any value is allowed.
            type: object
            example: "{\n\"tokens\": 7894,\n\"estimated_cost\": \"0,24$\"\n}"

        TaskRequestBody:
            type: object
            description: Body of the task request.
            required:
                - input
            properties:
                input:
                    description: Input prompt for the task.
                    type: string
                    example: "Write 'Washington' to the file 'output.txt'."
                additional_input:
                    $ref: "#/components/schemas/TaskInput"

        Task:
            allOf:
                - $ref: "#/components/schemas/TaskRequestBody"
                - type: object
                  description: Definition of an agent task.
                  required:
                      - "task_id"
                  properties:
                      task_id:
                          description: The ID of the task.
                          type: string
                          example: "50da533e-3904-4401-8a07-c49adf88b5eb"
                      artifacts:
                          type: array
                          example:
                              [
                                  "7a49f31c-f9c6-4346-a22c-e32bc5af4d8e",
                                  "ab7b4091-2560-4692-a4fe-d831ea3ca7d6",
                              ]
                          default: []
                          description: A list of artifacts that the task has produced.
                          items:
                              $ref: "#/components/schemas/Artifact"

        StepRequestBody:
            type: object
            description: Body of the task request.
            required:
                - input
            properties:
                input:
                    description: Input prompt for the step.
                    example: "Write the words you receive to the file 'output.txt'."
                    type: string
                additional_input:
                    $ref: "#/components/schemas/StepInput"

        Step:
            allOf:
                - $ref: "#/components/schemas/StepRequestBody"
                - type: object
                  required:
                      - "step_id"
                      - "task_id"
                      - "status"
                  properties:
                      task_id:
                          description: The ID of the task this step belongs to.
                          type: string
                          example: "50da533e-3904-4401-8a07-c49adf88b5eb"
                      step_id:
                          description: The ID of the task step.
                          type: string
                          example: "6bb1801a-fd80-45e8-899a-4dd723cc602e"
                      name:
                          description: The name of the task step.
                          type: string
                          example: "Write to file"
                      status:
                          description: The status of the task step.
                          type: string
                          example: "created"
                          enum:
                              - "created"
                              - "running"
                              - "completed"
                      output:
                          type: string
                          description: Output of the task step.
                          example: "I am going to use the write_to_file command and write Washington to a file called output.txt <write_to_file('output.txt', 'Washington')"
                      additional_output:
                          $ref: "#/components/schemas/StepOutput"
                      artifacts:
                          type: array
                          default: []
                          description: A list of artifacts that the step has produced.
                          items:
                              $ref: "#/components/schemas/Artifact"
                      is_last:
                          description: Whether this is the last step in the task.
                          type: boolean
                          default: false
                          example: true
