{
	"info": {
		"_postman_id": "b2560f90-dfad-4c46-a156-4311f9da86e6",
		"name": "Agent Protocol - REST",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "28411126-b2560f90-dfad-4c46-a156-4311f9da86e6"
	},
	"item": [
		{
			"name": "Basic User Experience",
			"item": [
				{
					"name": "Give me all the tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"Object.keys(pm.globals.toObject()).forEach((key) => {",
									"    pm.globals.unset(key);",
									"});",
									"Object.keys(pm.collectionVariables.toObject()).forEach((key) => {",
									"    pm.collectionVariables.unset(key);",
									"});",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "2999bda6-59d0-422d-b529-d145eb3fa45a"
							}
						}
					],
					"id": "a3a754b7-2efe-4d9e-8fdf-41d088afb7b2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks"
							]
						}
					},
					"response": [
						{
							"id": "4ad0acd5-6b93-49e7-ba01-86465a0aabed",
							"name": "mock response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 17 Aug 2023 18:03:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "150"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=1c95cd08c248d38f"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2527ca982b2b7c75"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "117"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1692295416"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "Create a new task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a9133ab-a6d2-4f21-8baf-93c953c069c8",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"taskId\", jsonData.task_id);",
									"",
									"pm.globals.set(\"taskInput\", JSON.parse(pm.request.body.raw).input);",
									"",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.input).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.task_id).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.artifacts).to.exist.and.to.be.an('array');",
									"});",
									"",
									"pm.test(\"task_id is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.task_id).to.be.a('string').and.to.have.lengthOf.at.least(1);",
									"});",
									"",
									"pm.test(\"Artifacts is an array\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.artifacts).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3903febb-41e3-45cc-ade0-31d9181a984c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks"
							]
						}
					},
					"response": [
						{
							"id": "eabc276c-5079-48d1-af48-cca9972dc0f8",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 13 Aug 2023 23:23:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n  \"task_id\": \"a1b259f8-3ab8-11ee-be56-0242ac121234\"\n}"
						}
					]
				},
				{
					"name": "Start the task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var artifacts = pm.response.json().artifacts;",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"}",
									"",
									"var artifacts = pm.response.json().artifacts;",
									"var existingArtifactId = pm.globals.get(\"artifactId\");",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    if (artifacts.length > 1) {",
									"        pm.test(\"The task should only create 1 artifact\", function () {",
									"            pm.expect.fail(\"More than one artifact was created.\");",
									"        });",
									"    } else {",
									"        pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"    }",
									"}",
									"",
									"",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Validate required fields\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"",
									"    pm.expect(responseData.task_id).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.step_id).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.status).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.output).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.is_last).to.exist.and.to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Verify that artifacts array is present and not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.artifacts).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1, \"Artifacts array should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Verify that artifactId global variable is set correctly\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.artifacts).to.exist;",
									"    pm.expect(pm.globals.get(\"artifactId\")).to.eql(responseData.artifacts.length > 0 ? responseData.artifacts[0].artifact_id : null);",
									"});",
									"",
									"",
									"pm.test(\"Only one artifact is created if artifacts array is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.artifacts).to.exist.and.to.be.an('array');",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "0d71ef41-2a65-41d0-9906-2b55828b90e9"
							}
						}
					],
					"id": "41839c17-8ac7-4df2-89ba-1c0750bdac45",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"{{taskInput}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"steps"
							]
						}
					},
					"response": [
						{
							"id": "8d8a2c6b-7cc9-430f-ad55-da2cec0aa26f",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"{{taskInput}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"steps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"task_id\": \"fde559f8-3ab8-11ee-be56-0242ac120002\",\n    \"step_id\": \"1a379290-3abc-11ee-be56-0242ac120002\",\n    \"status\": \"completed\",\n    \"output\": \"I am going to use the write_to_file method to write the word 'Washington' to a .txt file\",\n    \"artifacts\": [],\n    \"is_last\": false\n}"
						}
					]
				},
				{
					"name": "Continue the task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7453dbaa-cbbc-47f8-92fb-623cd69600d7",
								"exec": [
									"var artifacts = pm.response.json().artifacts;",
									"",
									"var existingArtifactId = pm.globals.get(\"artifactId\");",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    if (artifacts.length > 1) {",
									"        pm.test(\"The task should only create 1 artifact\", function () {",
									"            pm.expect.fail(\"More than one artifact was created.\");",
									"        });",
									"    } else {",
									"        pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"    }",
									"}",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Task ID is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.task_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Step ID should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.step_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Status should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.status).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Output is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.output).to.exist.and.to.not.be.empty;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5243b2c4-047f-44d8-b69c-4f472b84d9c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mock-match",
								"value": "2",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"y\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"steps"
							]
						}
					},
					"response": [
						{
							"id": "ace588a7-823e-49c8-9adf-5d12d09a9aea",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "mock-match",
										"value": "2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"y\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"steps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"task_id\": \"fde559f8-3ab8-11ee-be56-0242ac120002\",\n    \"step_id\": \"24179290-3abc-11ee-be56-0242ac12002d\",\n    \"status\": \"completed\",\n    \"output\": \"I just wrote the file into a file called output.txt\",\n    \"artifacts\": [\n        \"1b979290-3abc-11ee-be56-0242ac120a9f\"\n    ],\n    \"is_last\": true\n}"
						}
					]
				},
				{
					"name": "Continue the task after it's done",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var artifacts = pm.response.json().artifacts;",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"}",
									"",
									"var artifacts = pm.response.json().artifacts;",
									"var existingArtifactId = pm.globals.get(\"artifactId\");",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    if (artifacts.length > 1) {",
									"        pm.test(\"The task should only create 1 artifact\", function () {",
									"            pm.expect.fail(\"More than one artifact was created.\");",
									"        });",
									"    } else {",
									"        pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"    }",
									"}",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Task ID should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.task_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Step ID is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.step_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Status is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.status).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Output is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.output).to.exist.and.to.not.be.empty;",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "4e42ffbe-d3e7-4ba4-add9-756e964fa47c"
							}
						}
					],
					"id": "a3373121-6e1c-409f-8495-339f97362a60",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mock-match",
								"value": "3",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"y\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"steps"
							]
						}
					},
					"response": [
						{
							"id": "c9f5951b-7a43-4a11-a9e5-e1980ed061d6",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "mock-match",
										"value": "3",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"y\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"steps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"task_id\": \"fde559f8-3ab8-11ee-be56-0242ac120002\",\n    \"step_id\": \"34179290-3abc-11ee-be56-0242ac12002d\",\n    \"status\": \"completed\",\n    \"output\": \"I am already done with my work! Is there anything else I can help you with ?\",\n    \"artifacts\": [\n    ],\n    \"is_last\": true\n}"
						}
					]
				},
				{
					"name": "Continue the task after it's done 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var artifacts = pm.response.json().artifacts;",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"}",
									"",
									"var artifacts = pm.response.json().artifacts;",
									"var existingArtifactId = pm.globals.get(\"artifactId\");",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    if (artifacts.length > 1) {",
									"        pm.test(\"The task should only create 1 artifact\", function () {",
									"            pm.expect.fail(\"More than one artifact was created.\");",
									"        });",
									"    } else {",
									"        pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"    }",
									"}",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Task ID should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.task_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Step ID should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.step_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Status should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.status).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Output is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.output).to.exist.and.to.not.be.empty;",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "8fbcb08e-a74a-470f-be10-4839846d4b1d"
							}
						}
					],
					"id": "8523c670-ba2d-4579-9b18-88f06db8a087",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mock-match",
								"value": "4",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"y\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"steps"
							]
						}
					},
					"response": [
						{
							"id": "b6b302d4-506e-4e63-b73a-4c5965723e4c",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "mock-match",
										"value": "4",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"y\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"steps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"task_id\": \"fde559f8-3ab8-11ee-be56-0242ac120002\",\n    \"step_id\": \"44179290-3abc-11ee-be56-0242ac12002d\",\n    \"status\": \"completed\",\n    \"output\": \"I am already done with my work! Is there anything else I can help you with ?\",\n    \"artifacts\": [\n    ],\n    \"is_last\": true\n}"
						}
					]
				},
				{
					"name": "Continue the task after it's done 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var artifacts = pm.response.json().artifacts;",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"}",
									"",
									"var artifacts = pm.response.json().artifacts;",
									"var existingArtifactId = pm.globals.get(\"artifactId\");",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    if (artifacts.length > 1) {",
									"        pm.test(\"The task should only create 1 artifact\", function () {",
									"            pm.expect.fail(\"More than one artifact was created.\");",
									"        });",
									"    } else {",
									"        pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"    }",
									"}",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"task_id should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.task_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Step ID is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.step_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Status should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.status).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Output is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.output).to.exist.and.to.not.be.empty;",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "b15d9933-6f97-4f67-a42b-6b0826c9ab02"
							}
						}
					],
					"id": "15251124-3abc-44af-bad5-d851668429d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mock-match",
								"value": "5",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"y\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"steps"
							]
						}
					},
					"response": [
						{
							"id": "32e79d94-70ca-4448-b9cf-8efaa1fe9f4d",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "mock-match",
										"value": "5",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"y\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"steps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"task_id\": \"fde559f8-3ab8-11ee-be56-0242ac120002\",\n    \"step_id\": \"54179290-3abc-11ee-be56-0242ac12002d\",\n    \"status\": \"completed\",\n    \"output\": \"I am already done with my work! Is there anything else I can help you with ?\",\n    \"artifacts\": [\n    ],\n    \"is_last\": true\n}"
						}
					]
				},
				{
					"name": "Continue the task after it's done 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var artifacts = pm.response.json().artifacts;",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"}",
									"",
									"var artifacts = pm.response.json().artifacts;",
									"var existingArtifactId = pm.globals.get(\"artifactId\");",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    if (artifacts.length > 1) {",
									"        pm.test(\"The task should only create 1 artifact\", function () {",
									"            pm.expect.fail(\"More than one artifact was created.\");",
									"        });",
									"    } else {",
									"        pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"    }",
									"}",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Task ID is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.task_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Step ID is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.step_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Status is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.status).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Output is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.output).to.exist.and.to.not.be.empty;",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "72aa38a7-5cd7-4fca-a9b4-823db4b02c0b"
							}
						}
					],
					"id": "22eeddbe-7051-4648-84a5-b939d9ab505e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mock-match",
								"value": "6",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"y\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"steps"
							]
						}
					},
					"response": [
						{
							"id": "fc9dce7f-91c2-4c2d-847d-b5b4149e0a16",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "mock-match",
										"value": "6",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"y\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"steps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"task_id\": \"fde559f8-3ab8-11ee-be56-0242ac120002\",\n    \"step_id\": \"64179290-3abc-11ee-be56-0242ac12002d\",\n    \"status\": \"completed\",\n    \"output\": \"I am already done with my work! Is there anything else I can help you with ?\",\n    \"artifacts\": [\n    ],\n    \"is_last\": true\n}"
						}
					]
				},
				{
					"name": "Continue the task after it's done 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var artifacts = pm.response.json().artifacts;",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"}",
									"",
									"var artifacts = pm.response.json().artifacts;",
									"var existingArtifactId = pm.globals.get(\"artifactId\");",
									"",
									"if (artifacts && artifacts.length > 0) {",
									"    if (artifacts.length > 1) {",
									"        pm.test(\"The task should only create 1 artifact\", function () {",
									"            pm.expect.fail(\"More than one artifact was created.\");",
									"        });",
									"    } else {",
									"        pm.globals.set(\"artifactId\", artifacts[0].artifact_id);",
									"    }",
									"}",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Task ID is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.task_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Step ID is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.step_id).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Status should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.status).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Output should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.output).to.exist.and.to.not.be.empty;",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "09ff7aee-fa79-47a0-8718-4b5acc3af3ad"
							}
						}
					],
					"id": "fa6822b8-2bf4-44bd-8c90-0ff1bd5b1d08",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mock-match",
								"value": "7",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"y\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"steps"
							]
						}
					},
					"response": [
						{
							"id": "3ec52d9f-809f-4b48-848c-a192186bf79f",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "mock-match",
										"value": "7",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"y\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"steps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"task_id\": \"fde559f8-3ab8-11ee-be56-0242ac120002\",\n    \"step_id\": \"74179290-3abc-11ee-be56-0242ac12002d\",\n    \"status\": \"completed\",\n    \"output\": \"I am already done with my work! Is there anything else I can help you with ?\",\n    \"artifacts\": [\n    ],\n    \"is_last\": true\n}"
						}
					]
				},
				{
					"name": "Download Artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "2e7f7075-6b08-46d0-bb93-86d1657265eb"
							}
						}
					],
					"id": "1ef8c47b-ee90-48b4-8250-f8ef854f362c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mock-match",
								"value": "11",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/artifacts/{{artifactId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"artifacts",
								"{{artifactId}}"
							]
						}
					},
					"response": [
						{
							"id": "6e4a8a7a-6381-4dfe-90b4-6c877d2be759",
							"name": "mock response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "mock-match",
										"value": "11",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/artifacts/{{artifactId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"artifacts",
										"{{artifactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "Washington"
						}
					]
				}
			],
			"id": "babb2759-e161-45ad-b370-7b752f5d7891"
		},
		{
			"name": "Tasks Load Test",
			"item": [
				{
					"name": "Create a new task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"Object.keys(pm.globals.toObject()).forEach((key) => {",
									"    pm.globals.unset(key);",
									"});",
									"Object.keys(pm.collectionVariables.toObject()).forEach((key) => {",
									"    pm.collectionVariables.unset(key);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"taskId\", jsonData.task_id);",
									"pm.globals.set(\"taskInput\", JSON.parse(pm.request.body.raw).input);"
								],
								"type": "text/javascript",
								"id": "e6e9f48d-53c3-4b51-978b-8152421275a4"
							}
						}
					],
					"id": "6990c38b-0c3d-4513-8130-ff0e0a6c2968",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "mock-match",
								"value": "34"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks"
							]
						}
					},
					"response": [
						{
							"id": "ae448ec5-8f9f-4d2a-8c1d-048fcd1e4926",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "mock-match",
										"value": "34"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 13 Aug 2023 23:23:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\",\n    \"additional_input\": null,\n    \"task_id\": \"fde559f8-3ab8-11ee-be56-0242ac120002\",\n    \"artifacts\": []\n}"
						}
					]
				},
				{
					"name": "Get the task",
					"id": "fa1d4894-b1be-41c5-a711-db33a359bfd5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": [
						{
							"id": "a4d223d7-4271-4c2b-b126-5d68d73e9c66",
							"name": "mock response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 13 Aug 2023 23:23:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\",\n    \"additional_input\": null,\n    \"task_id\": \"121\",\n    \"artifacts\": []\n}"
						}
					]
				},
				{
					"name": "Get all the tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb173949-688d-4fdb-ba93-faf9d629c2f9",
								"exec": [
									"Object.keys(pm.globals.toObject()).forEach((key) => {",
									"    pm.globals.unset(key);",
									"});",
									"Object.keys(pm.collectionVariables.toObject()).forEach((key) => {",
									"    pm.collectionVariables.unset(key);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"taskId\", jsonData.task_id);",
									"pm.globals.set(\"taskInput\", JSON.parse(pm.request.body.raw).input);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8b9ed6ca-4323-48ed-983d-68b132de517c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks"
							]
						}
					},
					"response": [
						{
							"id": "92c2bf15-4830-4a37-be69-88efa575a768",
							"name": "mock response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 13 Aug 2023 23:23:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\",\n    \"additional_input\": null,\n    \"task_id\": \"121\",\n    \"artifacts\": []\n}"
						}
					]
				}
			],
			"id": "5458a8c7-c78a-4b3c-a653-b0855ea288cf"
		},
		{
			"name": "Artifacts Load Test",
			"item": [
				{
					"name": "Create a new task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7770586-3379-4c35-a56f-962873c17014",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"taskId\", jsonData.task_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4eb3d9e2-0d94-4daa-95f3-de83fd2ed052",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks"
							]
						}
					},
					"response": [
						{
							"id": "58180b70-d441-4445-a037-154e83013bd3",
							"name": "mock response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"Write the word 'Washington' to a .txt file\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 13 Aug 2023 23:23:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n  \"task_id\": \"a1b259f8-3ab8-11ee-be56-0242ac121234\"\n}"
						}
					]
				},
				{
					"name": "Upload an artifact for the specified task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5dc000ff-cb33-4966-9abc-e0627bb257a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b43f1dee-a8c0-40dd-924f-e4f9d95ba7e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": [
										"path/to/your/file.txt"
									]
								},
								{
									"key": "relative_path",
									"value": "python/code",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/artifacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"artifacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload multiple artifacts for the specified task",
					"id": "e0b9c253-2394-4da5-b326-e494e1bcdb5c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"type": "file",
									"src": [
										"path/to/your/file1.txt"
									]
								},
								{
									"key": "file2",
									"type": "file",
									"src": [
										"path/to/your/file2.txt"
									]
								},
								{
									"key": "relative_path",
									"value": "python/code",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/artifacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"artifacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a913281-cd56-41da-a0c1-e05ae30b135c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7befa267-d440-4977-a2ca-b1b9c5f0df7f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mock-match",
								"value": "11",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/artifacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"artifacts"
							]
						}
					},
					"response": [
						{
							"id": "095c02f4-dc5a-42d9-a190-9a88233303a0",
							"name": "mock response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "mock-match",
										"value": "11",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/artifacts",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"artifacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "Washington"
						}
					]
				},
				{
					"name": "Download Artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "8195d0ca-177f-4b94-a420-772a5e67c84a"
							}
						}
					],
					"id": "4fb42ae0-4079-4d17-9e9d-263e397c733a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "mock-match",
								"value": "11",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/agent/tasks/{{taskId}}/artifacts/{{artifactId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"agent",
								"tasks",
								"{{taskId}}",
								"artifacts",
								"{{artifactId}}"
							]
						}
					},
					"response": [
						{
							"id": "bcaf2971-e204-4c59-b42e-c057764c2291",
							"name": "mock response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "mock-match",
										"value": "11",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/agent/tasks/{{taskId}}/artifacts/{{artifactId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"agent",
										"tasks",
										"{{taskId}}",
										"artifacts",
										"{{artifactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 14 Aug 2023 16:28:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=daef761e243c402b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=2c0bd88502372360"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "115"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1691968334"
								},
								{
									"key": "ETag",
									"value": "W/\"96-S/5iQ2y1qqIInh5BwoPc+chvDJU\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "Washington"
						}
					]
				}
			],
			"id": "f6336a5e-c1f1-441d-9699-77b17420e912"
		}
	]
}
