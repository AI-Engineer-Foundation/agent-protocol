openapi: 3.0.1
info:
  title: Agent Communication Protocol
  description: Specification of the API protocol for communication with an agent.
  version: 'v0.2'

paths:
  /agent/tasks:
    post:
      summary: Creates a task for the agent.
      tags: [agent]
      operationId: createAgentTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequestBody'
      responses:
        200:
          description: A new agent task was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Internal Server Error
    get:
      summary: List all tasks that have been created for the agent.
      tags: [agent]
      operationId: listAgentTasksIDs
      responses:
        200:
          description: Returned list of agent's task IDs.
          content:
            application/json:
              schema:
                type: array
                default: []
                description: A list of task IDs
                items:
                  type: string
        default:
          description: Internal Server Error

  /agent/tasks/{task_id}:
    get:
      summary: Get details about a specified agent task.
      tags: [agent]
      operationId: getAgentTask
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returned details about an agent task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Internal Server Error

  /agent/tasks/{task_id}/steps:
    get:
      summary: List all steps for the specified task.
      tags: [agent]
      operationId: listAgentTaskSteps
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returned list of agent's step IDs for the specified task.
          content:
            application/json:
              schema:
                type: array
                default: []
                description: A list of step IDs for the task
                items:
                  type: string
        default:
          description: Internal Server Error
    post:
      summary: Execute a step in the specified agent task.
      tags: [agent]
      operationId: executeAgentTaskStep
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepRequestBody'
      responses:
        200:
          description: Executed step for the agent task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
        default:
          description: Internal Server Error

  /agent/tasks/{task_id}/steps/{step_id}:
    get:
      summary: Get details about a specified task step.
      tags: [agent]
      operationId: getAgentTaskStep
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
        - name: step_id
          in: path
          description: ID of the step
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returned details about an agent task step.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
        default:
          description: Internal Server Error

  /agent/tasks/{task_id}/artifacts:
    get:
      summary: List all artifacts that have been created for the given task.
      tags: [agent]
      operationId: listAgentTaskArtifacts
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returned the content of the artifact.
          content:
            application/json:
              schema:
                type: array
                default: []
                description: A list of artifacts for the task
                items:
                  $ref: '#/components/schemas/Artifact'
        default:
          description: Internal Server Error
    post:
      summary: Upload an artifact for the specified task.
      tags: [agent]
      operationId: uploadAgentTaskArtifacts
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArtifactUpload'
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returned the content of the artifact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
        default:
          description: Internal Server Error

  /agent/tasks/{task_id}/artifacts/{artifact_id}:
    get:
      summary: Download a specified artifact.
      tags: [agent]
      operationId: downloadAgentTaskArtifact
      parameters:
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: string
        - name: artifact_id
          in: path
          description: ID of the artifact
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returned the content of the artifact.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          description: Internal Server Error

components:
  schemas:
    TaskInput:
      description: Input parameters for the task. Any value is allowed.

    Artifact:
      type: object
      required:
        - 'artifact_id'
        - 'file_name'
      description: Artifact that the task has produced.
      properties:
        artifact_id:
          description: ID of the artifact.
          type: string
        file_name:
          description: Filename of the artifact.
          type: string
        relative_path:
          description: Relative path of the artifact in the agent's workspace.
          type: string

    ArtifactUpload:
      type: object
      required:
        - 'file'
      description: Artifact to upload to the agent.
      properties:
        file:
          description: File to upload.
          type: string
          format: binary
        relative_path:
          description: Relative path of the artifact in the agent's workspace.
          type: string

    StepInput:
      description: Input parameters for the task step. Any value is allowed.

    StepOutput:
      description: Output that the task step has produced. Any value is allowed.

    TaskRequestBody:
      type: object
      description: Body of the task request.
      properties:
        input:
          description: Input prompt for the task.
          type: string
        additional_input:
          $ref: '#/components/schemas/TaskInput'

    Task:
      allOf:
        - $ref: '#/components/schemas/TaskRequestBody'
        - type: object
          description: Definition of an agent task.
          required:
            - 'task_id'
            - 'artifacts'
          properties:
            task_id:
              description: The ID of the task.
              type: string
            artifacts:
              type: array
              default: []
              description: A list of artifacts that the task has produced.
              items:
                $ref: '#/components/schemas/Artifact'

    StepRequestBody:
      type: object
      description: Body of the task request.
      properties:
        input:
          description: Input prompt for the step.
          type: string
        additional_input:
          $ref: '#/components/schemas/StepInput'

    Step:
      allOf:
        - $ref: '#/components/schemas/StepRequestBody'
        - type: object
          required:
            - 'step_id'
            - 'task_id'
            - 'status'
            - 'artifacts'
          properties:
            task_id:
              description: The ID of the task this step belongs to.
              type: string
            step_id:
              description: The ID of the task step.
              type: string
            name:
              description: The name of the task step.
              type: string
            status:
              description: The status of the task step.
              type: string
              enum:
                - 'created'
                - 'completed'
            output:
              type: string
              description: Output of the task step.
            additional_output:
              $ref: '#/components/schemas/StepOutput'
            artifacts:
              type: array
              default: []
              description: A list of artifacts that the step has produced.
              items:
                $ref: '#/components/schemas/Artifact'
            is_last:
              description: Whether this is the last step in the task.
              type: boolean
              default: false
